[{"C:\\Users\\gagan\\Documents\\Projects\\snap-crescent\\source-code\\snap-crescent\\src\\main\\webapp\\src\\components\\Signin\\Signin.js":"1","C:\\Users\\gagan\\Documents\\Projects\\snap-crescent\\source-code\\snap-crescent\\src\\main\\webapp\\src\\utils\\ToastUtil.js":"2","C:\\Users\\gagan\\Documents\\Projects\\snap-crescent\\source-code\\snap-crescent\\src\\main\\webapp\\src\\utils\\ApiUtil.js":"3"},{"size":4413,"mtime":1608220306871,"results":"4","hashOfConfig":"5"},{"size":363,"mtime":1607952864585,"results":"6","hashOfConfig":"5"},{"size":882,"mtime":1608220541585,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10","usedDeprecatedRules":"11"},"1brnxh9",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gagan\\Documents\\Projects\\snap-crescent\\source-code\\snap-crescent\\src\\main\\webapp\\src\\components\\Signin\\Signin.js",["16"],"import React, { Component } from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { signin } from '../../actions/AuthAction';\r\n\r\nimport './Signin.scss';\r\n\r\nexport class Signin extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      formErrors: {\r\n        username: \"\",\r\n        password: \"\",\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.validate()) {\r\n      const requestObject = {\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      }\r\n      signin(requestObject)\r\n      .then(res => {\r\n        if(res) {\r\n          localStorage.setItem('user', JSON.stringify(res.user));\r\n          localStorage.setItem('authenticated', true);\r\n          localStorage.setItem('token', res.token);\r\n          this.props.history.push('/home');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        localStorage.setItem('authenticated', false);\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    const formErrors = this.setErrors(name, value);\r\n\r\n    this.setState({ formErrors, [name]: value });\r\n  }\r\n\r\n  validate = () => {\r\n    let valid = true;\r\n    let formErrors = this.state.formErrors;\r\n\r\n    Object.keys(this.state).forEach(name => {\r\n      formErrors = this.setErrors(name, this.state[name]);\r\n    });\r\n\r\n    Object.values(formErrors).forEach(formError => {\r\n      if (formError.length) {\r\n        valid = false;\r\n      }\r\n    });\r\n\r\n    this.setState({ formErrors });\r\n    return valid;\r\n  };\r\n\r\n  setErrors(name, value) {\r\n\r\n    const formErrors = this.state.formErrors;\r\n    switch (name) {\r\n      case 'username':\r\n        formErrors.username = value.length === 0\r\n          ? 'Please enter user name.' : '';\r\n        break;\r\n      case 'password':\r\n        formErrors.password = value.length === 0\r\n          ? 'Please enter password.' : ''\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return formErrors;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"signup-signin\">\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"card\">\r\n            <img className=\"logo\" src={'/logo.png'} />\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign In\r\n            </Typography>\r\n            <form className=\"form\" noValidate>\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"User Name\"\r\n                name=\"username\"\r\n                autoFocus\r\n                onChange={this.handleChange}\r\n                error={!!this.state.formErrors.username}\r\n                helperText={this.state.formErrors.username}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={this.handleChange}\r\n                error={!!this.state.formErrors.password}\r\n                helperText={this.state.formErrors.password}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"submit\"\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Link to=\"reset-password\">\r\n                <small>Reset Password</small>\r\n              </Link>\r\n              <div className=\"separator\" />\r\n\r\n              <Link to=\"signup\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"newAccount\"\r\n                >\r\n                  Create New Account\r\n                </Button>\r\n              </Link>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}",["17","18"],"C:\\Users\\gagan\\Documents\\Projects\\snap-crescent\\source-code\\snap-crescent\\src\\main\\webapp\\src\\utils\\ToastUtil.js",[],"C:\\Users\\gagan\\Documents\\Projects\\snap-crescent\\source-code\\snap-crescent\\src\\main\\webapp\\src\\utils\\ApiUtil.js",["19"],{"ruleId":"20","severity":1,"message":"21","line":102,"column":13,"nodeType":"22","endLine":102,"endColumn":55},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":2,"column":10,"nodeType":"29","messageId":"30","endLine":2,"endColumn":15},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'error' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]